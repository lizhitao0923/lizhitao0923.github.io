<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ClickHouse 入门</title>
    <url>/2021/08/16/ClickHouse/2021-08-16/</url>
    <content><![CDATA[<ul>
<li>ClickHouse 数据在目录中是如何存储的？</li>
</ul>
<blockquote>
<p>在 clickhouse config.xml 中 <code>&lt;path&gt;/var/lib/clickhouse/&lt;/path&gt;</code> 指定了本地数据存储的目录。<br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/15/16271469310713.jpg" alt="-w1082"><br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/15/16271477069317.jpg" alt="-w1162"><br>① all_1_10003_520: “all” 代表分区，该表没有分区所以默认为 all。同一个分区在数据未进行合并的时候会存在多个目录；”1” 代表该分区目录下最小数据块，“10003” 代表该分区目录下的最大数据块，“520” 代表这段数据块范围的数据总共合并的次数。每 15 分钟数据进行一次合并<br>注：如果使用非数字字符串字段作为分区字段，那么分区目录将使用 hashcode(field)_X_Y_N 形式来命名(目录 hashcode 具体对应那个分区，可以通过查看分区表信息获取)<br>② 列式存储，每个字段存在两个文件</p>
</blockquote>
<ul>
<li>查看表的分区信息</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#在系统表 system.part中查询表 tblX 的分区信息：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">table</span> ,<span class="keyword">partition</span> ,name ,active </span><br><span class="line"><span class="keyword">from</span> system.parts <span class="keyword">where</span> <span class="keyword">table</span> <span class="operator">=</span> <span class="string">&#x27;tblX&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建分布式引擎语法</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [db].tblX <span class="keyword">on</span> cluster &#123;CLUSTER_NAME&#125; <span class="keyword">as</span> [db].tblY </span><br><span class="line">ENGINE <span class="operator">=</span> Distributed(cluster_name, database_name, table_name[, sharding_key])</span><br></pre></td></tr></table></figure>
<p>对以上语法解释：<br>cluster_name：集群名称，与集群配置中的自定义名称相对应。配置在/etc/metrika.xml文件中，如下图：<br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/15/16271507905441.jpg" alt="-w608"><br>database_name：数据库名称。<br>table_name：表名称。<br>sharding_key：可选的，用于分片的key值，在数据写入的过程中，分布式表会依据分片key的规则，将数据分布到各个节点的本地表。<br>[注]：创建分布式表是读时检查的机制，也就是说对创建分布式表和本地表的顺序并没有强制要求。</p>
<ul>
<li><p>Clickhouse 查询过程<br>当查询MergeTree表数据时，首先向 <strong>primary.idx</strong> 文件中获取对应的索引，根据索引找到<strong>【列.mrk2】</strong>文件获取对应的数据块偏移量，然后再据偏移量从<strong>【列.bin】</strong>文件中读取块数据。</p>
</li>
<li><p>外部表能否做物化视图？如何做？<br>TODO…</p>
</li>
<li><p>如何物化全量数据？</p>
</li>
</ul>
<blockquote>
<p>官方有 POPULATE 关键字，但是不建议使用，因为视图创建期间原始表如果有写入数据会丢失。解决办法：在创建物化视图表的时候添加一个 WHERE 作为数据同步开始点，这个开始点是未来的某一个时间点。<br>详情参考：<a href="https://bohutang.me/2020/08/31/clickhouse-and-friends-materialized-view/">https://bohutang.me/2020/08/31/clickhouse-and-friends-materialized-view/</a></p>
</blockquote>
<ul>
<li>如何将 JSON 导入 CK </li>
</ul>
<blockquote>
<p>在埋点采集这种背景下，不同的事件上报的属性是不一样的，使用官方提供 clickhouse-jdbc.jar，在写入数据时必须将宽表所有字段声明，即便为空的字段也需要填入一个空值或默认值，处理很不灵活。这种情况下使用 HTTP + JSON 方式是不错的选择</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --location --request POST &#x27;http://localhost:8123/?input_format_skip_unknown_fields=1&amp;query=INSERT%20INTO%20hope_bigdata_dove.event_log%20FORMAT%20JSONEachRow&#x27; \</span><br><span class="line">--header &#x27;X-ClickHouse-User: default&#x27; \</span><br><span class="line">--header &#x27;X-ClickHouse-Key;&#x27; \</span><br><span class="line">--header &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">--data-raw &#x27;&#123;&quot;event1&quot;: &quot;payOrder&quot;, &quot;time&quot;: 163432245211,&quot;appLong&quot;: 12, &quot;isSuccess&quot;: &quot;true&quot;, &quot;p__app_version&quot;: 2.23&#125;</span><br><span class="line">&#123;&quot;event&quot;: &quot;payOrder&quot;, &quot;time&quot;: 163432245211&#125;&#x27;</span><br></pre></td></tr></table></figure>
<p>注意的几个问题:</p>
<blockquote>
<p>① input_format_skip_unknown_fields=1 可忽略未在表中声明的字段<br>② 异常: Cannot parse JSON string: expected opening quote: (while reading the value of key version)<br><strong>表 version 字段声明为 String 类型，接收到的值为数字. String 类型必须有双引号</strong><br>③ 异常：Cannot parse input: expected ‘,’ before: ‘true, “p__app_version”: “2”}\n{“event”: “payOrder”, “time”: 163432245211}’: (at row 1)<br><strong>类似这种错误一般都是字段类型不匹配造成，错误信息不是很明显。CK 没有 boolean 类型，表中某字段声明为 Enum8(‘true’=1,’false’=0)，类型无法匹配。需要写入的值用双引号括起来，当做字符串</strong></p>
</blockquote>
<p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/15/16272124200808.jpg" alt="-w1780"></p>
<p>–<br>参考:<br><a href="https://www.cnblogs.com/zhoujinyi/p/12627780.html">https://www.cnblogs.com/zhoujinyi/p/12627780.html</a><br>[Commiter Blog] <a href="https://bohutang.me/">https://bohutang.me</a></p>
<p>【clickhouse优化最佳实践(易企秀)】<br><a href="https://www.jianshu.com/p/a72a4782a102">https://www.jianshu.com/p/a72a4782a102</a></p>
]]></content>
      <categories>
        <category>ClickHouse</category>
      </categories>
      <tags>
        <tag>ClickHouse</tag>
      </tags>
  </entry>
  <entry>
    <title>Flink 集成 Hive</title>
    <url>/2021/07/16/Flink/Flink%20%E9%9B%86%E6%88%90%20Hive/</url>
    <content><![CDATA[<h1 id="配置-sql-client-defaults-yaml"><a href="#配置-sql-client-defaults-yaml" class="headerlink" title="配置 sql-client-defaults.yaml"></a>配置 sql-client-defaults.yaml</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h1><p><code>$&#123;FLINK_HOME&#125;/bin/sql-client.sh embedded</code></p>
<p><img src="images/16292742483723.jpg"></p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 入门</title>
    <url>/2020/09/20/Kubernetes/Kubernetes%20%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="安装k8s的常用工具"><a href="#安装k8s的常用工具" class="headerlink" title="安装k8s的常用工具"></a>安装k8s的常用工具</h1><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16005717572781.jpg" alt="-w1537"><br><strong>推荐</strong> <a href="https://kuboard.cn/install/install-k8s.html">https://kuboard.cn/install/install-k8s.html</a></p>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</span></span><br><span class="line">watch kubectl get pod -n kube-system -o wide --show-label</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看节点初始化结果</span></span><br><span class="line">kubectl get nodes -o wide</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只在 master 节点执行,获得 join命令参数</span></span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 只在 master 节点执行,检查节点是否加入</span></span><br><span class="line">kubectl get nodes -o wide</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 查看资源的文档</span></span><br><span class="line"> kubectl [command] -h</span><br><span class="line"> kubectl explain pod</span><br><span class="line"> kubectl explain pod.[apiVersion\spec\metadata\kind]</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 查看所有命名空间</span></span><br><span class="line"> kubectl get ns</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 直接粗暴的创建一个pod</span></span><br><span class="line"> kubectl run [pod name] --image [image url] --port [port] --replicas 1</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 扩容</span></span><br><span class="line"> kubectl scale deployment/[pod name]</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 获取service，service的<span class="built_in">type</span>有多种，clusterip、nodeport，clusterip开放的端口仅能在内部访问，nodeport开放的端口可以在外部访问</span></span><br><span class="line"> kubectl get svc</span><br><span class="line"> kubectl edit svc [svc pod name]</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 暴露pod的端口为服务</span></span><br><span class="line"> kubectl expose deployment [deployment name] \ </span><br><span class="line"> --port=[映射到k8s集群IP的端口] \</span><br><span class="line"> --target-port=[在容器内部端口] \</span><br><span class="line"> --name=[service name] \</span><br><span class="line"> --type=NodePort/ClusterIp</span><br><span class="line"> </span><br><span class="line">示例:</span><br><span class="line">[root@k8s-master ~]# kubectl expose deployment nginx-deployment --port=80 --target-port=80 --name=web3 --type=NodePort</span><br><span class="line">service/web3 exposed</span><br><span class="line">[root@k8s-master ~]# kubectl get svc </span><br><span class="line">NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE </span><br><span class="line">web1         ClusterIP   10.96.99.244   &lt;none&gt;        80/TCP         12m</span><br><span class="line">web2         ClusterIP   10.96.3.176    &lt;none&gt;        80/TCP         11m</span><br><span class="line">web3         NodePort    10.96.67.200   &lt;none&gt;        80:32732/TCP   5m17s</span><br><span class="line">访问:</span><br><span class="line">curl http://clusterIp:80 &lt;--&gt; http://10.96.67.200:80</span><br><span class="line">curl http://nodeIp:32732 &lt;--&gt; http://172.16.0.250:32732</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 获取具体 pod 的具体容器日志</span></span><br><span class="line"> kubectl logs [POD-NAME] -c [容器名]</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> 查看运行 pod 的详细信息</span></span><br><span class="line"> kubectl describe pod [pod name] -n kube-system</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 应用 pod 资源文件</span></span><br><span class="line"> kubectl apply -f [k8s yaml描述文件]</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 删除 pod</span></span><br><span class="line"> kubectl delete -f hello-world-pod.yaml</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 删除指定 pod</span></span><br><span class="line"> kubectl delete pod [pod name]</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 删除指定 deployment</span></span><br><span class="line"> kubectl delete deployment [deployment name]</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 删除所有的 pod</span></span><br><span class="line"> kubectl delete pod --all</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 查看所有的 ReplicaSet</span></span><br><span class="line"> kubectl get rs</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 删除所有的 ReplicationSet</span></span><br><span class="line"> kubectl delete rs --all</span><br></pre></td></tr></table></figure>

<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp-pod</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">hello-world</span>     </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h1><h2 id="Pod-存在的意义"><a href="#Pod-存在的意义" class="headerlink" title="Pod 存在的意义"></a>Pod 存在的意义</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018648502098.jpg" alt="-w822"><br> <img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018657941755.jpg" alt="-w795"><br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018659413086.jpg" alt="-w773"></p>
<h2 id="Pod-资源限制"><a href="#Pod-资源限制" class="headerlink" title="Pod 资源限制"></a>Pod 资源限制</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018662457290.jpg" alt="-w1039"></p>
<h2 id="Pod-重启策略"><a href="#Pod-重启策略" class="headerlink" title="Pod 重启策略"></a>Pod 重启策略</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018734381770.jpg" alt="-w528"></p>
<h2 id="Pod调度流程及影响调度的因素"><a href="#Pod调度流程及影响调度的因素" class="headerlink" title="Pod调度流程及影响调度的因素"></a>Pod调度流程及影响调度的因素</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018751150603.jpg" alt="-w975"><br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018755240149.jpg" alt="-w1020"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 给节点打上标签，可用于环境区分</span></span><br><span class="line">kubectl label node k8s-node1 env_role=dev</span><br></pre></td></tr></table></figure>
<p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018760256542.jpg" alt="-w990"></p>
<p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018796637964.jpg" alt="-w815"><br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018807803456.jpg" alt="-w851"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看污点节点</span></span><br><span class="line">kubectl describe node | grep Taint</span><br><span class="line"><span class="meta">#</span><span class="bash"> 为某一个节点打上 taint</span></span><br><span class="line">kubectl taint node [node] key=value:污点中的三个枚举值</span><br><span class="line"><span class="meta">#</span><span class="bash"> 去除 taint</span></span><br><span class="line">kubectl taint node [node] key=value:[污点中的三个枚举值]-</span><br></pre></td></tr></table></figure>

<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><h2 id="存在的意义"><a href="#存在的意义" class="headerlink" title="存在的意义"></a>存在的意义</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16019926762096.jpg" alt="-w851"></p>
<h2 id="Service-与-Pod-关系"><a href="#Service-与-Pod-关系" class="headerlink" title="Service 与 Pod 关系"></a>Service 与 Pod 关系</h2><p>同样是根据 Label 与 Selector 建立的关系，同 Pod 与 Deployment 建立关系是一样的</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16019988926813.jpg" alt="-w759"></p>
<h2 id="Service-类型"><a href="#Service-类型" class="headerlink" title="Service 类型"></a>Service 类型</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16020601718528.jpg" alt="-w487"></p>
<h1 id="容器生命周期"><a href="#容器生命周期" class="headerlink" title="容器生命周期"></a>容器生命周期</h1><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16011036327129.jpg" alt="-w500"></p>
<h2 id="init容器示例"><a href="#init容器示例" class="headerlink" title="init容器示例"></a>init容器示例</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">myapp-pod</span>  </span><br><span class="line">    <span class="attr">labels:</span>    </span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myapp-container</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">busybox</span>    </span><br><span class="line">      <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;echo The app is running! &amp;&amp; sleep 3600&#x27;</span>]</span><br><span class="line">    <span class="attr">initContainers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-myservice</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">busybox</span>    </span><br><span class="line">      <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;until nslookup myservice; do echo waiting for myservice; sleep 2;done;&#x27;</span>]  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-mydb</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">busybox</span>    </span><br><span class="line">      <span class="attr">command:</span> [<span class="string">&#x27;sh&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,<span class="string">&#x27;until nslookup mydb; do echo waiting for mydb; sleep 2; done;&#x27;</span>]</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">myservice</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">ports:</span>    </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span>      </span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span>      </span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9376</span></span><br><span class="line">      </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">mydb</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">ports:</span>    </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span>      </span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span>      </span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9377</span></span><br></pre></td></tr></table></figure>

<h2 id="检测探针-就绪检测-readiness"><a href="#检测探针-就绪检测-readiness" class="headerlink" title="检测探针 - 就绪检测(readiness)"></a>检测探针 - 就绪检测(readiness)</h2><p>readinessProbe-httpget</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">readiness-httpget-pod</span>  </span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">readiness-httpget-container</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">wangyanglinux/myapp:v1</span>    </span><br><span class="line">      <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span>    </span><br><span class="line">      <span class="attr">readinessProbe:</span>      </span><br><span class="line">        <span class="attr">httpGet:</span>        </span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span>        </span><br><span class="line">            <span class="attr">path:</span> <span class="string">/index1.html</span>      </span><br><span class="line">       <span class="attr">initialDelaySeconds:</span> <span class="number">1</span>      </span><br><span class="line">       <span class="attr">periodSeconds:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h2 id="检测探针-存活检测"><a href="#检测探针-存活检测" class="headerlink" title="检测探针 - 存活检测"></a>检测探针 - 存活检测</h2><p><strong>livenessProbe-exec</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">liveness-exec-pod</span>  </span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">liveness-exec-container</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/busybox</span>    </span><br><span class="line">      <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span>    </span><br><span class="line">      <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;touch /tmp/live ; sleep 60; rm -rf /tmp/live; sleep3600&quot;</span>]    </span><br><span class="line">      <span class="attr">livenessProbe:</span>      </span><br><span class="line">        <span class="attr">exec:</span>        </span><br><span class="line">            <span class="attr">command:</span> [<span class="string">&quot;test&quot;</span>,<span class="string">&quot;-e&quot;</span>,<span class="string">&quot;/tmp/live&quot;</span>]              </span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">1</span>      </span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>

<p><strong>livenessProbe-httpget</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">liveness-httpget-pod</span>  </span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">liveness-httpget-container</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span>    </span><br><span class="line">      <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span>    </span><br><span class="line">      <span class="attr">ports:</span>    </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span>      </span><br><span class="line">        <span class="attr">containerPort:</span> <span class="number">80</span>    </span><br><span class="line">     <span class="attr">livenessProbe:</span>      </span><br><span class="line">        <span class="attr">httpGet:</span>        </span><br><span class="line">            <span class="attr">port:</span> <span class="string">http</span>        </span><br><span class="line">            <span class="attr">path:</span> <span class="string">/index.html</span>      </span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">1</span>      </span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">3</span>      </span><br><span class="line">        <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<p><strong>livenessProbe-tcp</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">probe-tcp</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">hub.atguigu.com/library/myapp:v1</span>    </span><br><span class="line">      <span class="attr">livenessProbe:</span>      </span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">5</span>      </span><br><span class="line">        <span class="attr">timeoutSeconds:</span> <span class="number">1</span>      </span><br><span class="line">        <span class="attr">tcpSocket:</span>        </span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<h2 id="启动、退出动作"><a href="#启动、退出动作" class="headerlink" title="启动、退出动作"></a>启动、退出动作</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">lifecycle-demo</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">containers:</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">lifecycle-demo-container</span>    </span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span>    </span><br><span class="line">      <span class="attr">lifecycle:</span>      </span><br><span class="line">        <span class="attr">postStart:</span>        </span><br><span class="line">            <span class="attr">exec:</span>          </span><br><span class="line">                <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo Hello from the postStart handler &gt;/usr/share/message&quot;</span>]      </span><br><span class="line">        <span class="attr">preStop:</span>        </span><br><span class="line">            <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo Hello from the poststop handler &gt;/usr/share/message&quot;</span>]</span><br></pre></td></tr></table></figure>
<h1 id="Pod分类"><a href="#Pod分类" class="headerlink" title="Pod分类"></a>Pod分类</h1><ul>
<li>自主pod：Pod 退出了，此类型的 Pod 不会被创建</li>
<li>管理pod：在控制器的生命周期里，始终要维持 Pod 的副本数目<br>申明式编程 （Deployment）  apply（优）    create<br>命令式 （rs）               create（优）   apply</li>
</ul>
<h1 id="控制器类型"><a href="#控制器类型" class="headerlink" title="控制器类型"></a>控制器类型</h1><p>Kubernetes 中内建了很多 controller（控制器），这些相当于一个状态机，用来控制 Pod 的具体状态和行为</p>
<ul>
<li> ReplicationController 和 ReplicaSet</li>
<li> Deployment</li>
<li> DaemonSet</li>
<li> StateFulSet</li>
<li> Job/CronJob</li>
<li> Horizontal Pod Autoscaling  </li>
</ul>
<h2 id="ReplicationController-和-ReplicaSet"><a href="#ReplicationController-和-ReplicaSet" class="headerlink" title="ReplicationController 和 ReplicaSet"></a>ReplicationController 和 ReplicaSet</h2><p>ReplicationController（RC）用来确保容器应用的副本数始终保持在用户定义的副本数，即如果有容器异常退出，会自动创建新的 Pod 来替代；而如果异常多出来的容器也会自动回收；</p>
<p>在新版本的 Kubernetes 中建议使用 ReplicaSet 来取代 ReplicationController 。ReplicaSet 跟ReplicationController 没有本质的不同，只是名字不一样，并且 ReplicaSet 支持集合式的 selector；</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">frontend</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">replicas:</span> <span class="number">3</span>  </span><br><span class="line">    <span class="attr">selector:</span>    </span><br><span class="line">        <span class="attr">matchLabels:</span>  <span class="comment"># 通过匹配标签来控制副本数     </span></span><br><span class="line">            <span class="attr">tier:</span> <span class="string">frontend</span>  </span><br><span class="line">    <span class="attr">template:</span>    </span><br><span class="line">        <span class="attr">metadata:</span>      </span><br><span class="line">            <span class="attr">labels:</span>        </span><br><span class="line">                <span class="attr">tier:</span> <span class="string">frontend</span>    </span><br><span class="line">        <span class="attr">spec:</span>      </span><br><span class="line">            <span class="attr">containers:</span>      </span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">php-redis</span>        </span><br><span class="line">              <span class="attr">image:</span> <span class="string">gcr.io/google_samples/gb-frontend:v3</span>        </span><br><span class="line">              <span class="attr">env:</span>        </span><br><span class="line">              <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GET_HOSTS_FROM</span>          </span><br><span class="line">                <span class="attr">value:</span> <span class="string">dns</span>        </span><br><span class="line">              <span class="attr">ports:</span>        </span><br><span class="line">              <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<p>RS 与 Deployment  的关联<br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16018150602205.jpg" alt="-w592"></p>
<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>Deployment 为 Pod 和 ReplicaSet 提供了一个声明式定义 (declarative) 方法，用来替代以前的ReplicationController 来方便的管理应用。典型的应用场景包括；</p>
<ul>
<li>定义 Deployment 来创建 Pod 和 ReplicaSet</li>
<li>滚动升级和回滚应用</li>
<li>扩容和缩容</li>
<li>暂停和继续 Deployment</li>
</ul>
<p>I. <strong>部署一个简单的 Nginx 应用</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">    <span class="attr">replicas:</span> <span class="number">3</span>  </span><br><span class="line">    <span class="attr">selector:</span>    </span><br><span class="line">        <span class="attr">matchLabels:</span>     </span><br><span class="line">            <span class="attr">app:</span> <span class="string">nginx</span> </span><br><span class="line">    <span class="attr">template:</span>    </span><br><span class="line">        <span class="attr">metadata:</span>      </span><br><span class="line">            <span class="attr">labels:</span>        </span><br><span class="line">                <span class="attr">app:</span> <span class="string">nginx</span>    </span><br><span class="line">        <span class="attr">spec:</span>      </span><br><span class="line">            <span class="attr">containers:</span>      </span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span>        </span><br><span class="line">              <span class="attr">image:</span> <span class="string">nginx:1.7.9</span>        </span><br><span class="line">              <span class="attr">ports:</span>        </span><br><span class="line">              <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># --record参数可以记录命令，我们可以很方便的查看每次 revision 的变化</span></span></span><br><span class="line">kubectl create -f ~/nginx-deployment.yaml --record</span><br></pre></td></tr></table></figure>
<p>II. <strong>扩容</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl scale deployment nginx-deployment --replicas 4</span><br></pre></td></tr></table></figure>

<p>III. <strong>如果集群支持 horizontal pod autoscaling 的话，还可以为Deployment设置自动扩展</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl autoscale deployment nginx-deployment --min=10 --max=15 --cpu-percent=80</span><br></pre></td></tr></table></figure>

<p>IV. <strong>更新镜像也比较简单</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl set image deployment/nginx-deployment nginx=nginx:1.9.1</span><br></pre></td></tr></table></figure>

<p>V. <strong>回滚</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl rollout undo deployment/nginx-deployment</span><br></pre></td></tr></table></figure>

<h3 id="更新-Deployment"><a href="#更新-Deployment" class="headerlink" title="更新 Deployment"></a>更新 Deployment</h3><p>假如我们现在想要让 nginx pod 使用nginx:1.9.1的镜像来代替原来的nginx:1.7.9的镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl set image deployment/nginx-deployment nginx=nginx:1.9.1</span><br></pre></td></tr></table></figure>
<p>可以使用edit命令来编辑 Deployment</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl edit deployment/nginx-deployment</span><br></pre></td></tr></table></figure>
<p>查看 rollout 的状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl rollout status deployment/nginx-deployment</span><br></pre></td></tr></table></figure>
<p>查看历史 RS</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get rs</span><br><span class="line">NAME                          DESIRED   CURRENT   READY   AGE</span><br><span class="line">nginx-deployment-5d59d67564   3         3         0       28m</span><br><span class="line">nginx-deployment-69c44dfb78   2         2         0       15m</span><br></pre></td></tr></table></figure>
<h3 id="Deployment-更新策略"><a href="#Deployment-更新策略" class="headerlink" title="Deployment 更新策略"></a>Deployment 更新策略</h3><p>Deployment 可以保证在升级时只有一定数量的 Pod 是 down 的。默认的，它会确保至少有比期望的Pod数量少一个是up状态（最多一个不可用）<br>Deployment 同时也可以确保只创建出超过期望数量的一定数量的 Pod。默认的，它会确保最多比期望的Pod数量多一个的 Pod 是 up 的（最多1个 surge ）<br>未来的 Kuberentes 版本中，将从1-1变成25%-25% ??</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl describe deployment</span><br></pre></td></tr></table></figure>
<h3 id="Rollover（多个rollout并行）"><a href="#Rollover（多个rollout并行）" class="headerlink" title="Rollover（多个rollout并行）"></a>Rollover（多个rollout并行）</h3><p>假如您创建了一个有5个<code>niginx:1.7.9</code> replica的 Deployment，但是当还只有3个<code>nginx:1.7.9</code>的 replica 创建出来的时候您就开始更新含有5个<code>nginx:1.9.1</code> replica 的 Deployment。在这种情况下，Deployment 会立即杀掉已创建的3个<code>nginx:1.7.9</code>的 Pod，并开始创建<code>nginx:1.9.1</code>的 Pod。它不会等到所有的5个<code>nginx:1.7.9</code>的Pod 都创建完成后才开始改变航道</p>
<h3 id="回退-Deployment"><a href="#回退-Deployment" class="headerlink" title="回退 Deployment"></a>回退 Deployment</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看 deployment 历史版本</span></span><br><span class="line">kubectl rollout history deployment/nginx-deployment</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以使用 --revision参数指定某个历史版本</span></span><br><span class="line">kubectl rollout undo deployment/nginx-deployment --to-revision=2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 暂停 deployment 的更新</span></span><br><span class="line">kubectl rollout pause deployment/nginx-deployment   </span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl rollout status命令查看 Deployment 是否完成</span></span><br><span class="line">kubectl rollout status deployment/nginx-deployment</span><br></pre></td></tr></table></figure>
<p><strong>您可以用kubectl rollout status命令查看 Deployment 是否完成。如果 rollout 成功完成，kubectl rollout status将返回一个0值的 Exit Code</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl rollout status deployment/nginx-deployment</span><br><span class="line">deployment &quot;nginx-deployment&quot; successfully rolled out</span><br><span class="line">[root@k8s-master ~]# echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h3 id="Deployment-清理-Policy"><a href="#Deployment-清理-Policy" class="headerlink" title="Deployment 清理 Policy"></a>Deployment 清理 Policy</h3><p>您可以通过设置 <code>.spec.revisonHistoryLimit</code> 项来指定 deployment 最多保留多少 revision 历史记录。默认的会保留所有的 revision；如果将该项设置为0，Deployment 就不允许回退了</p>
<h2 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h2><p>DaemonSet确保全部（或者一些）Node 上运行一个 Pod 的副本。当有 Node 加入集群时，也会为他们新增一个Pod 。当有 Node 从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod使用 DaemonSet 的一些典型用法：</p>
<ul>
<li>运行集群存储 daemon，例如在每个 Node 上运行glusterd、ceph</li>
<li>在每个 Node 上运行日志收集 daemon，例如fluentd、logstas</li>
<li>在每个 Node 上运行监控 daemon，例如Prometheus Node Exporter、collectd、Datadog 代理、New Relic 代理，或 Ganglia gmond</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ds-test</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">selector:</span></span><br><span class="line">        <span class="attr">matchLabels:</span></span><br><span class="line">            <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">        <span class="attr">metadata:</span></span><br><span class="line">            <span class="attr">labels:</span></span><br><span class="line">                <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">            <span class="attr">containers:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logs</span></span><br><span class="line">              <span class="attr">image:</span> <span class="string">nginx:1.9.1</span></span><br><span class="line">              <span class="attr">ports:</span></span><br><span class="line">              <span class="comment"># 将物理机的/var/log 挂载到 container 中的 /tmp/log </span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">volumeMounts:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">                <span class="attr">mountPath:</span> <span class="string">/tmp/log</span></span><br><span class="line">            <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">              <span class="attr">hostPath:</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">/var/log</span>                            </span><br></pre></td></tr></table></figure>

<h2 id="Job"><a href="#Job" class="headerlink" title="Job"></a>Job</h2><p>Job 负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个 Pod 成功结束<br><strong>查看所有的job命令： <code>kubectl get job</code></strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">            <span class="string">containers：</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line">              <span class="attr">image:</span> <span class="string">perl</span></span><br><span class="line">              <span class="attr">command:</span> [<span class="string">&quot;perl&quot;</span>, <span class="string">&quot;-Mbignum=bpi&quot;</span>, <span class="string">&quot;-wle&quot;</span>, <span class="string">&quot;print bpi(2000)&quot;</span>]</span><br><span class="line">            <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br><span class="line">     <span class="attr">backoffLimit:</span> <span class="number">4</span>             </span><br></pre></td></tr></table></figure>
<h2 id="CronJob"><a href="#CronJob" class="headerlink" title="CronJob"></a>CronJob</h2><p>Cron Job管理基于时间的 Job，即：</p>
<ul>
<li>在给定时间点只运行一次</li>
<li>周期性地在给定时间点运行<br>使用前提条件：<strong>当前使用的 Kubernetes 集群，版本 &gt;= 1.8（对 CronJob）。对于先前版本的集群，版本 &lt;1.8，启动 API Server时，通过传递选项–runtime-config=batch/v2alpha1=true可以开启 batch/v2alpha1API</strong></li>
</ul>
<p>典型的用法如下所示：</p>
<ul>
<li>在给定的时间点调度 Job 运行</li>
<li>创建周期性运行的 Job，例如：数据库备份、发送邮件</li>
</ul>
<p><strong>查看所有的cronjob命令： <code>kubectl get cronjob</code></strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">schedule:</span> <span class="string">&quot;*/1 * * * *&quot;</span></span><br><span class="line">    <span class="attr">jobTemplate:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">            <span class="attr">template:</span></span><br><span class="line">                <span class="attr">spec:</span></span><br><span class="line">                    <span class="string">containers：</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line">                      <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">                      <span class="attr">args:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">/bin/bash</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">date;</span> <span class="string">echo</span> <span class="string">Hello</span> <span class="string">from</span> <span class="string">the</span> <span class="string">Kubernetes</span> <span class="string">cluster</span></span><br><span class="line">                     <span class="attr">restartPolicy:</span> <span class="string">OnFailure</span></span><br></pre></td></tr></table></figure>

<h2 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h2><p>StatefulSet 作为 Controller 为 Pod 提供唯一的标识。它可以保证部署和 scale 的顺序StatefulSet是为了解决有状态服务的问题（对应Deployments和ReplicaSets是为无状态服务而设计），其应用场景包括：</p>
<ul>
<li><p>稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现</p>
</li>
<li><p>稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service（即没有Cluster IP的Service）来实现</p>
</li>
<li><p>有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行（即从0到N-1，在下一个Pod运行之前所有之前的Pod必须都是Running和Ready状态），基于init containers来实现</p>
</li>
<li><p>有序收缩，有序删除（即从N-1到0）<br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16020726117118.jpg" alt="-w1005"></p>
</li>
<li><p>无头service指的是clusterIp=None*<br><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16020731512365.jpg" alt="-w910"></p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="string">`---`</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-statefulset</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">      <span class="attr">matchLabels:</span></span><br><span class="line">          <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">      <span class="attr">meatadata:</span></span><br><span class="line">          <span class="attr">labels:</span></span><br><span class="line">              <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">containers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">nginx:1.9.1</span></span><br><span class="line">            <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>                          </span><br></pre></td></tr></table></figure>
<h1 id="配置Secret"><a href="#配置Secret" class="headerlink" title="配置Secret"></a>配置Secret</h1><p>  作用：加密数据存在 etcd 里面，让 Pod 容器以挂载 Volume 方式进行访问<br>  场景：凭证<br>  使用示例：</p>
</li>
<li><p>创建 secret 加密数据</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"> <span class="attr">username:</span> <span class="string">YWRtaW4=</span></span><br><span class="line"> <span class="attr">password:</span> <span class="string">MWYyZDFlMmU2N2Rm</span> </span><br></pre></td></tr></table></figure>
<p> <strong>查看已有 secret 命令：<code>kubectl get secret</code></strong></p>
</li>
<li><p>在 Pod 中以环境变量的形式进行引用</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"> <span class="attr">containers:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">   <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">   <span class="attr">env:</span></span><br><span class="line">    <span class="comment"># 环境变量名，随意</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SECRET_USERNAME</span></span><br><span class="line">       <span class="attr">valueFrom:</span></span><br><span class="line">         <span class="attr">secretKeyRef:</span></span><br><span class="line">             <span class="comment"># 引用名为 mysecret 的 Secret 中的 username属性</span></span><br><span class="line">             <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">             <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SECRET_PASSWORD</span></span><br><span class="line">       <span class="attr">valueFrom:</span></span><br><span class="line">         <span class="attr">secretKeyRef:</span></span><br><span class="line">             <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">             <span class="attr">key:</span> <span class="string">password</span>         </span><br></pre></td></tr></table></figure></li>
<li><p><em>验证:</em>* <em>Pod 成功运行后，进入到 Pod 中，通过输出系统变量验证 echo $SECRET_USERNAME</em></p>
</li>
<li><p>以 Volumn 形式挂载到 Pod 容器中去</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="string">volumeMounts：</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">foo</span></span><br><span class="line">        <span class="attr">mountPath:</span> <span class="string">&quot;/etc/foo&quot;</span></span><br><span class="line">        <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volums:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">foo</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">mysecret</span>        </span><br><span class="line"><span class="string">```</span>   </span><br><span class="line"> <span class="string">**验证：**</span> <span class="string">*Pod</span> <span class="string">成功运行后，进入到</span> <span class="string">Pod</span> <span class="string">中，查看</span> <span class="string">/etc/foo/password</span> <span class="string">/etc/foo/username</span> <span class="string">两个文件*</span>  </span><br><span class="line">   </span><br><span class="line"><span class="comment"># ConfigMap</span></span><br><span class="line"> <span class="string">作用：存储不加密的数据到</span> <span class="string">etcd，</span> <span class="string">让</span> <span class="string">Pod</span> <span class="string">以变量或者</span> <span class="string">Volume</span> <span class="string">挂载到容器中。和</span> <span class="string">Secret</span> <span class="string">唯一的不同是一个存储的是加密数据，一个是不加密数据</span></span><br><span class="line"> <span class="string">场景：应用的配置文件</span></span><br><span class="line">   </span><br><span class="line"><span class="string">*</span> <span class="string">创建配置文件</span></span><br><span class="line"><span class="string">例如：redis.properties</span></span><br><span class="line"><span class="string">redis.host=xx.y.z.w</span></span><br><span class="line"><span class="string">redis.port=6379</span></span><br><span class="line"><span class="string">redis.passwd=xyz</span></span><br><span class="line"><span class="string">*</span> <span class="string">创建configmap</span></span><br><span class="line"></span><br><span class="line"><span class="string">```shell</span></span><br><span class="line"><span class="comment"># 创建configmap</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">configmap</span> <span class="string">redis-config</span> <span class="string">--from-file=redis.properties</span></span><br><span class="line"><span class="comment"># 查看所有的configmap</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">cm</span></span><br><span class="line"><span class="comment"># 查看 configmap 内容</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">describe</span> <span class="string">cm</span> <span class="string">redis-config</span> </span><br></pre></td></tr></table></figure>
<ul>
<li>以环境变量方式 Pod 进行引用<br>a. 创建 yaml，声明变量信息 configmap 创建<br>configmap.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">myconfig</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">    <span class="attr">special:</span></span><br><span class="line">        <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">hello</span>    </span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建 configmap</span></span><br><span class="line">kubectl apply -f configmap.yaml</span><br></pre></td></tr></table></figure>

<p>b. 以变量挂载<br>   <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"> <span class="attr">containers:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">   <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">   <span class="attr">env:</span></span><br><span class="line">    <span class="comment"># 环境变量名，随意</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">INFO</span></span><br><span class="line">       <span class="attr">valueFrom:</span></span><br><span class="line">         <span class="attr">secretKeyRef:</span></span><br><span class="line">             <span class="comment"># 引用名为 myconfig 的 ConfigMap 中的 special.info属性</span></span><br><span class="line">             <span class="attr">name:</span> <span class="string">myconfig</span></span><br><span class="line">             <span class="attr">key:</span> <span class="string">special.info</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LEVEL</span></span><br><span class="line">       <span class="attr">valueFrom:</span></span><br><span class="line">         <span class="attr">secretKeyRef:</span></span><br><span class="line">             <span class="attr">name:</span> <span class="string">myconfig</span></span><br><span class="line">             <span class="attr">key:</span> <span class="string">special.level</span>         </span><br></pre></td></tr></table></figure></p>
<ul>
<li>以 Volumn 挂载方式，在 Pod 中进行访问</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;cat /etc/config/redis.properties&quot;</span>]</span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">/etc/config</span></span><br><span class="line">     <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">redis-config</span></span><br><span class="line">     <span class="attr">restartPolicy:</span> <span class="string">Never</span>              </span><br></pre></td></tr></table></figure>
<p><strong>验证：</strong> 因为 busybox 运行之后就退出了，所以无法进入。但是我们输出的日志，可以通过 <code>kubectl logs [pod name]</code> 方式查看验证</p>
<h1 id="K8S-集群安全机制"><a href="#K8S-集群安全机制" class="headerlink" title="K8S 集群安全机制"></a>K8S 集群安全机制</h1><p>访问k8s集群的时候，需要经过三个步骤：<br>I. 认证<br>传输安全，对外不暴露8080端口，只能内部访问，对外使用6443端口<br>常用方式：<br>https 证书认证，基于ca证书<br>http token 认证，通过token识别用户<br>http 基本认证，通过用户名+密码认证</p>
<p>II. 鉴权<br>基于RBAC进行鉴权操作<br>a. 创建命名空间<br>kubectl create ns roledemo<br>b. 在新创建的命名空间下创建 Pod<br>kubectl run nginx –image=nginx -n roledemo<br>c. 创建角色</p>
<blockquote>
<p>查看某个命名空间下的已有角色：kubectl get role -n roledemo</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">roledemo</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>] <span class="comment"># &quot;&quot; indicates the core API group</span></span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>d. 创建角色绑定</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">roledemo</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lucy</span> <span class="comment"># Name is case sensitive</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span> <span class="comment">#this must be Role or ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span> <span class="comment"># this must match the name of the Role or ClusterRole you wish to bind to</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>

<p>III. 准入控制<br>准入控制列表？？？</p>
<p>进行访问k8s集群的时候，都需要经过apiserver，apiserver做统一协调，比如门卫。<br>访问过程中需要证书、token、用户名+密码，如果访问 pod，需要 serviceAccount   </p>
<h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><p>为什么要使用 ingress ？<br>平常我们把服务暴露到外部访问的时候可以使用 IP+NodePort 方式实现，但是这个有缺陷：</p>
<ol>
<li>在每个节点上都会开启这样一个端口，在访问的时候通过各个物理节点的ip:port范根，很不方便</li>
<li>端口被占用</li>
</ol>
<p>Ingress 和 Pod 的关系？<br>Pod 和 Ingress 通过 service 关联；ingress 作为统一入口，由service关联一组 pod</p>
<h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p><img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16021351816109.jpg" alt="-w456"></p>
<h2 id="使用-Ingress"><a href="#使用-Ingress" class="headerlink" title="使用 Ingress"></a>使用 Ingress</h2><ul>
<li>部署 ingress controller （使用官方维护的 nginx controller）<br>a. 创建 Pod<br>b. 创建 Service<br>c.部署 ingress controller</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-configuration</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcp-services</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">udp-services</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;extensions&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;networking.k8s.io&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;extensions&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;networking.k8s.io&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">resourceNames:</span></span><br><span class="line">      <span class="comment"># Defaults to &quot;&lt;election-id&gt;-&lt;ingress-class&gt;&quot;</span></span><br><span class="line">      <span class="comment"># Here: &quot;&lt;ingress-controller-leader&gt;-&lt;nginx&gt;&quot;</span></span><br><span class="line">      <span class="comment"># This has to be adapted if you change either parameter</span></span><br><span class="line">      <span class="comment"># when launching the nginx-ingress-controller.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ingress-controller-leader-nginx&quot;</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role-nisa-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole-nisa-binding</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">&quot;10254&quot;</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># wait up to five minutes for the drain of connections</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">lizhenliang/nginx-ingress-controller:0.30.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 101</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">101</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">limits:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">min:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">90Mi</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Container</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>验证：</strong> <code> kubectl get pod,svc -n ingress-nginx</code></p>
<ul>
<li>创建 ingress 规则</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">example.ingredemo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">web</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span>     </span><br></pre></td></tr></table></figure>
<p><strong>验证：</strong> <code>kubectl get ingress</code><br>在要访问的机器中修改/etc/hosts 添加 ip example.ingredemo.com</p>
<p>   –<br>   <img src="https://lizhitao-blog.oss-cn-hangzhou.aliyuncs.com/2021/08/19/16019958016308.jpg" alt="-w709"></p>
<p>参考：<br><a href="https://zhuanlan.zhihu.com/p/109577847">https://zhuanlan.zhihu.com/p/109577847</a></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
</search>
